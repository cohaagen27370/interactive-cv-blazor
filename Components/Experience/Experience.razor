@using interactiveCvBlazor.Components.Experience
<RadzenCard Variant="Variant.Filled" class="rz-my-12 rz-mx-auto">
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" class="rz-p-4">
        <RadzenStack Gap="0">
            <RadzenText TextStyle="TextStyle.Body1" class="rz-display-flex rz-mt-2 rz-my-0"><b><a href="@Model.Society.Url" target="_blank">@Model.Society.Name</a></b></RadzenText>
            <br/>
            <RadzenText TextStyle="TextStyle.Body1">@Model.Job</RadzenText>
            <RadzenText TextStyle="TextStyle.Body2">De @Model.StartYear à @(Model.EndYear.HasValue ? Model.EndYear.Value : "maintenant") (@(Model.EndYear.HasValue ? Model.EndYear.Value - Model.StartYear : DateTime.Now.Year - Model.StartYear) ans)</RadzenText>
            
            @if (!Model.EndYear.HasValue)
            {
                <RadzenAlert AlertStyle="AlertStyle.Info" Variant="Variant.Filled" Shade="Shade.Dark" AllowClose="false">
                    Poste actuellement occupé.
                </RadzenAlert>
            }
            
            <RadzenText TextStyle="TextStyle.Body2">@Model.Description</RadzenText>
            
            <RadzenStack Orientation="Orientation.Horizontal" Wrap="FlexWrap.Wrap" JustifyContent="JustifyContent.Center" class="rz-p-12" Gap="0.5rem">
            @foreach (var tag in Model.Tags.Select((value, index) => new { value, index }))
            {
                <Tag Model="@tag.value" Label="@tag.value.Label" Odd="@(tag.index % 2 != 0)" />
            }
            </RadzenStack>
            
            
            </RadzenStack>
    </RadzenStack>
</RadzenCard>

@code {
    [Parameter] public ExperienceModel Model { get; set; } = null!;
}